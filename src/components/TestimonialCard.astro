---
export interface TestimonialCardProps {
    name: string;
    rating: number;
    quote: string;
}

const { name, rating, quote } = Astro.props as TestimonialCardProps;
const fullStars = Math.floor(rating);
const emptyStars = 5 - fullStars;

function sanitizeId(name: string) {
    return name.toLowerCase().replace(/[^a-z0-9]/g, '-');
}

const sanitizedId = sanitizeId(name);
---

<div class="testimonial-card" aria-labelledby={`testimonial-title-${sanitizedId}`}>
    <div class="testimonial-content">
        <div class="rating" role="img" aria-label={`Rating: ${rating} out of 5 stars`}>
            {Array(fullStars).fill('★').map((_, index) => (
                <span class="rating-star full" aria-hidden="true">★</span>
            ))}
            {Array(emptyStars).fill('★').map((_, index) => (
                <span class="rating-star empty" aria-hidden="true">★</span>
            ))}
        </div>
        <p class="text" id={`testimonial-title-${sanitizedId}`}>{quote}</p>
    </div>
    <div class="sub-title">{name}</div>
</div>

<style>
.testimonial-card {
    box-sizing: border-box;
    padding: 1.5rem;
    background-color: var(--white);
    box-shadow: var(--shadow);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
    height: 100%;
    margin: 0 0.5rem;
}

.testimonial-content {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    width: 100%;
}

.rating {
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
}

.rating-star {
    font-size: 1.5rem;
    margin: 0;
    color: var(--wheat-500);
}

.rating-star.empty {
    color: var(--gray-400);
}

@media (max-width: 560px) {
    .testimonial-card {
        justify-content: flex-start;
        align-items: flex-start;
        margin: 0.5rem;
    }
}
</style>
