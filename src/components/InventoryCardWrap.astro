---
import InventoryCard from './InventoryCard.astro'

const { limit } = Astro.props;
const cartEntries = import.meta.glob('../content/carts/*.md', { eager: true });
const carts = Object.values(cartEntries);

// Shuffle array elements
function shuffleArray(array: any[]) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]]; 
    }
    return array;
}

// Sort carts so unsold items appear first
function sortBySoldStatus(array: any[]) {
    return array.sort((a, b) => {
        if (a.frontmatter.sold && !b.frontmatter.sold) {
            return 1
        } else if (!a.frontmatter.sold && b.frontmatter.sold) {
            return -1;
        } else {
            return 0;
        }
    });
}

// Shuffle the array, then sort by sold status
const shuffledCarts = shuffleArray(carts);
const sortedCarts = sortBySoldStatus(shuffledCarts);

const featuredCarts = sortedCarts.filter(cart => cart.frontmatter.featured === true);
const displayedCarts = limit ? featuredCarts.slice(0, 3) : sortedCarts;
---

<ul class="inventory-card-wrap">
    {displayedCarts.map((cart) => (
        <InventoryCard
            name={cart.frontmatter.name}
            price={cart.frontmatter.price}
            image={cart.frontmatter.thumbnail}
            sold={cart.frontmatter.sold || false}
            slug={cart.frontmatter.slug}
            year={cart.frontmatter.year}
            make={cart.frontmatter.make}
            model={cart.frontmatter.model}
        />
    ))}
</ul>

<style>
    /* Inventory Grid Styles */
    .inventory-card-wrap {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(18rem, 1fr));
        gap: 3rem 2rem;
        max-width: 100rem;
        margin: 3rem auto 2rem;
        box-sizing: border-box;
        padding: 0;
        justify-content: space-between;
    }

    /* Remove list styling */
    .inventory-card-wrap ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    /* Card Styling */
    .inventory-card-wrap .card {
        width: 100%; 
        min-width: 18rem;
    }

    /* Responsive Styles */
    @media (min-width: 1024px) {
        .inventory-card-wrap {
            grid-template-columns: repeat(3, 1fr);
        }
    }
</style>